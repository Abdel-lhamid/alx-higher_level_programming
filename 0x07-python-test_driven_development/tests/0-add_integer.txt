# run test with python3 -m doctest -v ./tests/0-add_integer.txt

First import the method to test
>>> add_func = __import__('0-add_integer').add_integer

SUCCESS CASES:

Test using the default b value (b=98):
	>>> print(add_func(5))
	103

Test different integers and floats:
	>>> print(add_func(-2, 5))
	3

	>>> print(add_func(-3.5, 1))
	-2

	>>> print(add_func(1.2, 2.8)))
	3

	>>> print(add_func(3, 4))
	7

FAIL CASES:

No args:
	>>> print(add_func(None, None))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> print(add_func(None))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Other data types:
	>>> print(add_func("ALX"))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> print(add_func("hello", "world"))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> print(add_func(0, [7, 22]))
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Extra args:
	>>> print(add_func(-1, 1, 2, 3))
	Traceback (most recent call last):
	...
	TypeError: add_func() takes from 1 to 2 positional arguments but 4 were given

NaN numbers:
	>>> print(add_func(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
