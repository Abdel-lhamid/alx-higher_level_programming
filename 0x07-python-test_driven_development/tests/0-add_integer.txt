# This is a test file for the add_integer function

First import the method to test
>>> add_integer = __import__('0-add_integer').add_integer

# Test Case 1
>>> add_integer(1, 2)
3

# Test Case 2
>>> add_integer(2)
100

# Test Case 3
>>> add_integer(100.3, -2)
98

# Test Case 4 - Error Case: b must be an integer
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test Case 5 - Error Case: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test Case 6
>>> add_integer(5.5, 5)
10

# Test Case 7
>>> add_integer(0, 0)
0

# Test Case 8
>>> add_integer(-1, -1, 3)
Traceback (most recent call last):
    ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

# Test Case 9: float over flow
>>> add_integer(float(inf))
Traceback (most recent call last):
     ...
OverflowError: cannot convert float infinity to integer

# Test Case 10: nan
>>>add_integer(float("NaN"))
Traceback (most recent call last):
     ...
ValueError: cannot convert float NaN to integer
